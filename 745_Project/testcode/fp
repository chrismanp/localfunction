; ModuleID = 'fp.c'
source_filename = "fp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define i32 @add(i32 %i, i32 %j) #0 {
entry:
  %i.addr = alloca i32, align 4
  %j.addr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  store i32 %j, i32* %j.addr, align 4
  %0 = load i32, i32* %i.addr, align 4
  %1 = load i32, i32* %j.addr, align 4
  %add = add nsw i32 %0, %1
  ret i32 %add
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @sub(i32 %i, i32 %j) #0 {
entry:
  %i.addr = alloca i32, align 4
  %j.addr = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  store i32 %j, i32* %j.addr, align 4
  %0 = load i32, i32* %i.addr, align 4
  %1 = load i32, i32* %j.addr, align 4
  %sub = sub nsw i32 %0, %1
  ret i32 %sub
}

; Function Attrs: noinline nounwind optnone uwtable
define void @print(i32 %x, i32 %y, i32 (...)* %func) #0 {
entry:
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %func.addr = alloca i32 (...)*, align 8
  store i32 %x, i32* %x.addr, align 4
  store i32 %y, i32* %y.addr, align 4
  store i32 (...)* %func, i32 (...)** %func.addr, align 8
  %0 = load i32 (...)*, i32 (...)** %func.addr, align 8
  %1 = load i32, i32* %x.addr, align 4
  %2 = load i32, i32* %y.addr, align 4
  %callee.knr.cast = bitcast i32 (...)* %0 to i32 (i32, i32, ...)*
  %call = call i32 (i32, i32, ...) %callee.knr.cast(i32 %1, i32 %2) #1
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %func_add = alloca i32 (...)*, align 8
  %func_sub = alloca i32 (...)*, align 8
  store i32 0, i32* %retval, align 4
  store i32 100, i32* %x, align 4
  store i32 200, i32* %y, align 4
  store i32 (...)* bitcast (i32 (i32, i32)* @add to i32 (...)*), i32 (...)** %func_add, align 8
  %0 = load i32, i32* %x, align 4
  %1 = load i32, i32* %y, align 4
  %2 = load i32 (...)*, i32 (...)** %func_add, align 8
  call void @print(i32 %0, i32 %1, i32 (...)* %2) #1
  store i32 (...)* bitcast (i32 (i32, i32)* @sub to i32 (...)*), i32 (...)** %func_sub, align 8
  %3 = load i32, i32* %x, align 4
  %4 = load i32, i32* %y, align 4
  %5 = load i32 (...)*, i32 (...)** %func_sub, align 8
  call void @print(i32 %3, i32 %4, i32 (...)* %5) #1
  ret i32 0
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "function_depth"="0" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "function_depth"="0" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 6.0.0 (trunk)"}
